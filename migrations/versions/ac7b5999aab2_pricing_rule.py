"""pricing rule

Revision ID: ac7b5999aab2
Revises: 1288c7df8502
Create Date: 2023-08-15 11:47:44.128978

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = 'ac7b5999aab2'
down_revision = '1288c7df8502'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('customer', 'email',
               existing_type=mysql.VARCHAR(length=120),
               nullable=False)
    op.create_unique_constraint(None, 'customer', ['phone'])
    op.create_unique_constraint(None, 'employee', ['phone'])
    op.add_column('pricing_rule', sa.Column('from_', sa.Integer(), nullable=False))
    op.add_column('pricing_rule', sa.Column('to_', sa.Integer(), nullable=False))
    op.drop_column('pricing_rule', 'less_than')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pricing_rule', sa.Column('less_than', mysql.INTEGER(), autoincrement=False, nullable=False))
    op.drop_column('pricing_rule', 'to_')
    op.drop_column('pricing_rule', 'from_')
    op.drop_constraint(None, 'employee', type_='unique')
    op.drop_constraint(None, 'customer', type_='unique')
    op.alter_column('customer', 'email',
               existing_type=mysql.VARCHAR(length=120),
               nullable=True)
    # ### end Alembic commands ###
